import { NextResponse } from 'next/server';

export const runtime = 'nodejs';

export async function POST(request: Request) {
  try {
    // Ожидаем JSON с полем analysis, содержащим текст анализа
    const { analysis } = await request.json();
    if (!analysis) {
      return NextResponse.json({ error: 'No analysis provided' }, { status: 400 });
    }

    // Формируем HTML-содержимое для PDF с красивым дизайном
    const htmlContent = `
      <html>
        <head>
          <meta charset="utf-8">
          <title>Candidate Analysis Report</title>
          <style>
            @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
            body {
              font-family: 'Roboto', sans-serif;
              margin: 0;
              padding: 0;
              background: #f4f4f4;
              color: #333;
            }
            .container {
              width: 90%;
              max-width: 800px;
              margin: 40px auto;
              background: #fff;
              padding: 30px 40px;
              box-shadow: 0 0 10px rgba(0,0,0,0.1);
            }
            header {
              text-align: center;
              padding-bottom: 20px;
              border-bottom: 2px solid #ddd;
            }
            header h1 {
              margin: 0;
              font-size: 28px;
              color: #2c3e50;
            }
            .content {
              margin-top: 20px;
              line-height: 1.6;
              font-size: 16px;
            }
            .content p {
              margin-bottom: 15px;
            }
            footer {
              text-align: center;
              margin-top: 40px;
              font-size: 12px;
              color: #aaa;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <header>
              <h1>Candidate Analysis Report</h1>
            </header>
            <div class="content">
              ${analysis.split('\n').map((line: string) => `<p>${line}</p>`).join('')}
            </div>
            <footer>
              <p>Generated by Kazarichuk_HR</p>
            </footer>
          </div>
        </body>
      </html>
    `;

    // Готовим payload для DocRaptor API
    const payload = {
      document_content: htmlContent,
      name: "analysis_report.pdf",
      document_type: "pdf",
      test: true, // Для продакшна установите false
    };

    const response = await fetch('https://docraptor.com/docs', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Basic ${Buffer.from(process.env.DOC_RAPTOR_API_KEY + ':').toString('base64')}`,
      },
      body: JSON.stringify(payload),
    });

    if (!response.ok) {
      const errorData = await response.json();
      return NextResponse.json({ error: errorData }, { status: response.status });
    }

    // DocRaptor возвращает PDF в бинарном виде, преобразуем его в Base64
    const pdfBuffer = await response.arrayBuffer();
    const pdfBase64 = Buffer.from(pdfBuffer).toString('base64');

    return NextResponse.json({ message: 'PDF generated successfully', pdf: pdfBase64 });
  } catch (error) {
    console.error('Error generating PDF:', error);
    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
  }
}