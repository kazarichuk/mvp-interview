'use client';

import { useEffect, useState } from 'react';

export default function ThanksPage() {
  const [finalAnalysis, setFinalAnalysis] = useState<{ level: string; description: string } | null>(null);
  const [pdfLink, setPdfLink] = useState<string | null>(null);

  useEffect(() => {
    // Retrieve the analysis
    const storedData = localStorage.getItem('finalAnalysis');
    if (storedData) {
      try {
        const parsed = JSON.parse(storedData);
        setFinalAnalysis(parsed);
      } catch (error) {
        console.error('Error parsing finalAnalysis:', error);
      }
    }
    // Retrieve the PDF link generated by DocRaptor
    const storedPdfLink = localStorage.getItem('pdfLink');
    if (storedPdfLink) {
      setPdfLink(storedPdfLink);
    }
  }, []);

  if (!finalAnalysis) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-tl from-gray-100 via-gray-50 to-gray-100 p-4">
        <div className="bg-white/80 backdrop-blur-md p-6 rounded-xl shadow-md text-center max-w-sm w-full">
          <h1 className="text-3xl font-semibold text-gray-800 mb-2">Processing your results...</h1>
          <p className="text-gray-600">Please wait while we finalize your analysis.</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-tl from-gray-100 via-gray-50 to-gray-100 p-4">
      <div className="bg-white/80 backdrop-blur-md p-8 rounded-xl shadow-xl max-w-2xl w-full">
        <h1 className="text-4xl font-bold text-gray-900 mb-6 text-center">Your Level</h1>
        <div className="text-center text-2xl font-semibold text-gray-700 mb-8">
          {finalAnalysis.level}
        </div>

        {/* The description with preserved newlines */}
        <div className="text-gray-700 leading-relaxed whitespace-pre-line">
          {finalAnalysis.description}
        </div>

        <div className="mt-8 flex justify-center">
          {pdfLink ? (
            // Wrap button in an anchor tag so that clicking downloads the PDF
            <a
              href={pdfLink}
              download="analysis.pdf"
              target="_blank"
              rel="noopener noreferrer"
              className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-500 transition-colors shadow-sm font-semibold"
            >
              Download PDF
            </a>
          ) : (
            <button
              className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-500 transition-colors shadow-sm font-semibold"
              onClick={() => alert('PDF not available yet')}
            >
              Download PDF
            </button>
          )}
        </div>
      </div>
    </div>
  );
}